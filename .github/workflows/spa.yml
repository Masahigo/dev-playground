# Workflow for deploying the demo SPA to Azure
# Good example: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions#deploy-using-azure-service-principal

name: Spa CD

on:
  push:
    branches: [ master ]
    paths: 
      - '.github/workflows/spa.yml'
    tags: 
      - '*'
env:
    tf_version: '0.12.23'
    tf_working_dir: 'infra/terraform'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  provision-infra:
    name: 'Provision infra using Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets. AZ_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: 'cff7ced3-00d8-477f-8589-11da069c1da1'
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-var="linkedin_client_secret=${{ secrets.LINKEDIN_CLIENT_SECRET }}"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets. AZ_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: 'cff7ced3-00d8-477f-8589-11da069c1da1'
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      - name: 'Terraform Apply using custom action'
        uses: ./.github/actions/terraform-azcli
        with:
          variables: linkedin_client_secret=${{ secrets.LINKEDIN_CLIENT_SECRET }}
          path: ${{ env.tf_working_dir }}
        env:
          ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets. AZ_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: 'cff7ced3-00d8-477f-8589-11da069c1da1'
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
  deploy-client:
    needs: provision-infra
    name: 'Deploy client'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./client
    steps:
    # checkout the repo
    - name: 'Checkout Github Action' 
      uses: actions/checkout@master
    - name: Setup Node 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: 'npm install and build'
      run: |
        npm install
        npm run build --if-present
    - name: Upload artifacts for build
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: client/build
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Execute deploy script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.3.1
        inlineScript: |
          cd client
          chmod +x ./ci/deploy-azure-cdn.sh
          ./ci/deploy-azure-cdn.sh spa-demo-fe-we-cdn-ep spa-demo-fe-we-cdn spa-demo-we-rg spademofewestor
    - name: Azure logout
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az logout
